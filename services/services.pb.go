// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CsvProcessingRequest struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CsvProcessingRequest) Reset()         { *m = CsvProcessingRequest{} }
func (m *CsvProcessingRequest) String() string { return proto.CompactTextString(m) }
func (*CsvProcessingRequest) ProtoMessage()    {}
func (*CsvProcessingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{0}
}

func (m *CsvProcessingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsvProcessingRequest.Unmarshal(m, b)
}
func (m *CsvProcessingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsvProcessingRequest.Marshal(b, m, deterministic)
}
func (m *CsvProcessingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsvProcessingRequest.Merge(m, src)
}
func (m *CsvProcessingRequest) XXX_Size() int {
	return xxx_messageInfo_CsvProcessingRequest.Size(m)
}
func (m *CsvProcessingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CsvProcessingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CsvProcessingRequest proto.InternalMessageInfo

func (m *CsvProcessingRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type CsvProcessingResult struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CsvProcessingResult) Reset()         { *m = CsvProcessingResult{} }
func (m *CsvProcessingResult) String() string { return proto.CompactTextString(m) }
func (*CsvProcessingResult) ProtoMessage()    {}
func (*CsvProcessingResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{1}
}

func (m *CsvProcessingResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsvProcessingResult.Unmarshal(m, b)
}
func (m *CsvProcessingResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsvProcessingResult.Marshal(b, m, deterministic)
}
func (m *CsvProcessingResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsvProcessingResult.Merge(m, src)
}
func (m *CsvProcessingResult) XXX_Size() int {
	return xxx_messageInfo_CsvProcessingResult.Size(m)
}
func (m *CsvProcessingResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CsvProcessingResult.DiscardUnknown(m)
}

var xxx_messageInfo_CsvProcessingResult proto.InternalMessageInfo

func (m *CsvProcessingResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Record struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	MobileNumber         string   `protobuf:"bytes,4,opt,name=MobileNumber,proto3" json:"MobileNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{2}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Record) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

type Nothing struct {
	Dummy                string   `protobuf:"bytes,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{3}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func (m *Nothing) GetDummy() string {
	if m != nil {
		return m.Dummy
	}
	return ""
}

func init() {
	proto.RegisterType((*CsvProcessingRequest)(nil), "services.CsvProcessingRequest")
	proto.RegisterType((*CsvProcessingResult)(nil), "services.CsvProcessingResult")
	proto.RegisterType((*Record)(nil), "services.Record")
	proto.RegisterType((*Nothing)(nil), "services.Nothing")
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_8e16ccb8c5307b32) }

var fileDescriptor_8e16ccb8c5307b32 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xdd, 0x4a, 0xfb, 0x40,
	0x10, 0xc5, 0xdb, 0xb4, 0xff, 0xfc, 0xed, 0x28, 0xb5, 0x8e, 0x45, 0x42, 0xc1, 0x0f, 0xf6, 0xaa,
	0x37, 0xf6, 0x22, 0x3e, 0x81, 0x98, 0x0a, 0x05, 0x0d, 0x92, 0xe2, 0x03, 0x6c, 0x92, 0x69, 0x5d,
	0x48, 0xba, 0xba, 0x1f, 0x05, 0xdf, 0x5e, 0xb2, 0xd9, 0x5a, 0x2c, 0x7a, 0xb7, 0xe7, 0x77, 0x86,
	0x19, 0xce, 0x59, 0x18, 0x6a, 0x52, 0x5b, 0x51, 0x90, 0x9e, 0xbd, 0x2b, 0x69, 0x24, 0x1e, 0xed,
	0x34, 0x9b, 0xc2, 0xf8, 0x41, 0x6f, 0x5f, 0x94, 0x2c, 0x48, 0x6b, 0xb1, 0x59, 0x67, 0xf4, 0x61,
	0x49, 0x1b, 0x1c, 0x41, 0xef, 0x35, 0x7b, 0x8a, 0xba, 0x37, 0xdd, 0xe9, 0x20, 0x6b, 0x9e, 0xec,
	0x16, 0xce, 0x0f, 0x26, 0xb5, 0xad, 0x0c, 0x5e, 0x40, 0xb8, 0x34, 0xdc, 0x58, 0xed, 0x67, 0xbd,
	0x62, 0x2b, 0x08, 0x33, 0x2a, 0xa4, 0x2a, 0x71, 0x08, 0xc1, 0x22, 0xf1, 0x6e, 0xb0, 0x48, 0x10,
	0xa1, 0x9f, 0xf2, 0x9a, 0xa2, 0xc0, 0x11, 0xf7, 0xc6, 0x31, 0xfc, 0x9b, 0xd7, 0x5c, 0x54, 0x51,
	0xcf, 0xc1, 0x56, 0x20, 0x83, 0x93, 0x67, 0x99, 0x8b, 0x8a, 0x52, 0x5b, 0xe7, 0xa4, 0xa2, 0xbe,
	0x33, 0x7f, 0x30, 0x76, 0x0d, 0xff, 0x53, 0x69, 0xde, 0xc4, 0x66, 0xdd, 0x2c, 0x29, 0x6d, 0x5d,
	0x7f, 0xfa, 0x5b, 0xad, 0x88, 0x57, 0x07, 0x09, 0x97, 0x6d, 0x74, 0x4c, 0xe1, 0xd8, 0xc3, 0x47,
	0x51, 0x11, 0x5e, 0xcd, 0xbe, 0x3b, 0xfa, 0xad, 0x90, 0xc9, 0xe5, 0x9f, 0x7e, 0x53, 0x03, 0xeb,
	0xc4, 0x73, 0x38, 0x4d, 0xb8, 0xe1, 0x39, 0xd7, 0xb4, 0x3b, 0x11, 0xc3, 0xe0, 0xbe, 0x2c, 0x7d,
	0x0d, 0xa3, 0xfd, 0x82, 0x96, 0x4c, 0xce, 0xf6, 0xc4, 0x47, 0x60, 0x9d, 0x3c, 0x74, 0x3f, 0x74,
	0xf7, 0x15, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xfe, 0xcf, 0xa4, 0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CsvProcessingServiceClient is the client API for CsvProcessingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CsvProcessingServiceClient interface {
	ProcessFile(ctx context.Context, in *CsvProcessingRequest, opts ...grpc.CallOption) (*CsvProcessingResult, error)
}

type csvProcessingServiceClient struct {
	cc *grpc.ClientConn
}

func NewCsvProcessingServiceClient(cc *grpc.ClientConn) CsvProcessingServiceClient {
	return &csvProcessingServiceClient{cc}
}

func (c *csvProcessingServiceClient) ProcessFile(ctx context.Context, in *CsvProcessingRequest, opts ...grpc.CallOption) (*CsvProcessingResult, error) {
	out := new(CsvProcessingResult)
	err := c.cc.Invoke(ctx, "/services.CsvProcessingService/ProcessFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CsvProcessingServiceServer is the server API for CsvProcessingService service.
type CsvProcessingServiceServer interface {
	ProcessFile(context.Context, *CsvProcessingRequest) (*CsvProcessingResult, error)
}

func RegisterCsvProcessingServiceServer(s *grpc.Server, srv CsvProcessingServiceServer) {
	s.RegisterService(&_CsvProcessingService_serviceDesc, srv)
}

func _CsvProcessingService_ProcessFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CsvProcessingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CsvProcessingServiceServer).ProcessFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.CsvProcessingService/ProcessFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CsvProcessingServiceServer).ProcessFile(ctx, req.(*CsvProcessingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CsvProcessingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.CsvProcessingService",
	HandlerType: (*CsvProcessingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessFile",
			Handler:    _CsvProcessingService_ProcessFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// DatabaseServiceClient is the client API for DatabaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatabaseServiceClient interface {
	AddRecord(ctx context.Context, in *Record, opts ...grpc.CallOption) (*Nothing, error)
}

type databaseServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatabaseServiceClient(cc *grpc.ClientConn) DatabaseServiceClient {
	return &databaseServiceClient{cc}
}

func (c *databaseServiceClient) AddRecord(ctx context.Context, in *Record, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/services.DatabaseService/AddRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatabaseServiceServer is the server API for DatabaseService service.
type DatabaseServiceServer interface {
	AddRecord(context.Context, *Record) (*Nothing, error)
}

func RegisterDatabaseServiceServer(s *grpc.Server, srv DatabaseServiceServer) {
	s.RegisterService(&_DatabaseService_serviceDesc, srv)
}

func _DatabaseService_AddRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Record)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServiceServer).AddRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.DatabaseService/AddRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServiceServer).AddRecord(ctx, req.(*Record))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatabaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.DatabaseService",
	HandlerType: (*DatabaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRecord",
			Handler:    _DatabaseService_AddRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}
